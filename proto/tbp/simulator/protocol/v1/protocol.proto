syntax = "proto3";
package tbp.simulator.protocol.v1;

message RemoveAllObjectsRequest {
}

message RemoveAllObjectsResponse {
}

message VectorXYZ {
  double x = 1;
  double y = 2;
  double z = 3;
}

message QuaternionWXYZ {
  double w = 1;
  double x = 2;
  double y = 3;
  double z = 4;
}

message AddObjectRequest {
  string name = 1;
  VectorXYZ position = 2;
  QuaternionWXYZ rotation = 3;
  VectorXYZ scale = 4;
  int64 semantic_id = 5;
  int64 primary_target_object = 6;
}

message TupleObjectIDSemanticID {
  int64 object_id = 3;
  int64 semantic_id = 4;
}

message AddObjectResponse {
  TupleObjectIDSemanticID result = 1;
}

message Action {
  string agent_id = 1;
}

message StepRequest {
  Action action = 1;
}

message SensorObservations {
  bytes data = 1;
}

message AgentObservations {
  bytes data = 1;
}

message Observations {
  bytes data = 1;
}

message SensorState {
  bytes position = 1;
  bytes rotation = 2;
}

message AgentState {
  bytes position = 2;
  bytes rotation = 3;
  optional bool motor_only_step = 4;
  map<string, SensorState> sensors = 5;
}

message ProprioceptiveState {
  bytes data = 1;
}

message TupleObservationsProprioceptiveState {
  Observations observations = 3;
  ProprioceptiveState proprioceptive_state = 4;
}

message StepResponse {
  TupleObservationsProprioceptiveState result = 1;
}

message ResetRequest {
}

message ResetResponse {
  TupleObservationsProprioceptiveState result = 1;
}

message CloseRequest {
}

message CloseResponse {
}

service SimulatorService {
  rpc RemoveAllObjects (RemoveAllObjectsRequest) returns (RemoveAllObjectsResponse);
  rpc AddObject (AddObjectRequest) returns (AddObjectResponse);
  rpc Step (StepRequest) returns (StepResponse);
  rpc Reset (ResetRequest) returns (ResetResponse);
  rpc Close (CloseRequest) returns (CloseResponse);
}

